
==========>>>>><<<<<==========>>>>><<<<<==========>>>>><<<<<==========>>>>><<<<<==========
                6PP : mongoDB+mongoose+mogo compass+Node with mongoDB
==========>>>>><<<<<==========>>>>><<<<<==========>>>>><<<<<==========>>>>><<<<<==========
_____________________________
mongoose setup environment
"""""""""""""""""""""""""""""
        => create a folder for mongodb+mongoose+express trial
        => create a "index.js" file
        => open terminal and apply "npm init -y"
        => and then apply "npm i express"
        => and then apply "npm i mongoose"

_____________________________
mongoose use
"""""""""""""""""""""""""""""
        1=> connect mongoose with node by,
                  mongoose.connect('mongodb://localhost:27017/UserSample',{useNewUrlParser:true,useUnifiedTopology:true}).then(()=>{
                      console.log("connected to mongoDB successfully");
                  }).catch((err)=>{
                      console.log(err);
                  });
        2=> connect create schema,
                  const userSchema = new mongoose.Schema({
                      name:String,
                      age:Number,
                      email:String
                  });
        3=> connect create modal,
                  const UserModelOrCollection = mongoose.model('User',userSchema); // key("User") হিসেবে capital letter দিয়ে শুরু হওয়া singular word দিতে হবে কারন এটার নামেই automatic plural form এ collection naming হবে
        

_____________________________
mongoose using for CRUD
"""""""""""""""""""""""""""""
        4=> POST or add a user,
        
                  const createUser = async ()=>{
                        const result = await UserModelOrCollection.create({
                            name:'sachin',
                            age:30,
                            email:'as@if.cokm'
                        })
                        console.log(result);
                    }
                    createUser();

        5=>(i) GET all users by searching without query,
                  
                    const getAllUser = async ()=>{
                        const result = await UserModelOrCollection.find();
                        console.log(result);
                    }
                    getAllUser();

        5=>(ii) GET all users by searching with query,
                like, {age:{$gt:30}} || searching by key "age" and value is greater({$gt:30}) than 30
                like, {age:{$lt:30}} || searching by key "age" and value is lessthan({$lt:30}) than 30
                like, {age:{$eq:30}} || searching by key "age" and value is equalto({$eq:30}) than 30
                like, {age:{$lte:30}} || searching by key "age" and value is lessthanequalto({$lte:30}) than 30
                like, {age:{$gte:30}} || searching by key "age" and value is greaterequalto({$gte:30}) than 30
                like, {age:{$in: [10,20]}} || searching by key "age" and value is equalto any value in the query array({$in: [10,20]}) 
                like, {age:{$nin: [10,20]}} || searching by key "age" and value is not equalto any value in the query array({$nin: [10,20]}) 
                  
                    const getAllUser = async ()=>{
                        const result = await UserModelOrCollection.find();
                        console.log(result);
                    }
                    getAllUser();



==========>>>>><<<<<==========>>>>><<<<<==========>>>>><<<<<==========>>>>><<<<<==========
                6PP : REST API with mongoos+node+express
==========>>>>><<<<<==========>>>>><<<<<==========>>>>><<<<<==========>>>>><<<<<==========
_____________________________
mongoose setup environment
"""""""""""""""""""""""""""""
        => create a folder for mongodb+mongoose+express trial
        => create a "index.js" file
        => open terminal and apply "npm init -y"
        => and then apply "npm i express"
        => and then apply "npm i mongoose"

________________________________________
schema and model connection creating
""""""""""""""""""""""""""""""""""""""""
        1=> import express and mongoose,   
                        const express = require('express')
                        const mongoose = require('mongoose')

        2=> create app and port,   
                        const app = express()
                        const port = 5000;

        3=> use cors to be connected with server,   
                        app.use(cors())
                        app.use(express.json())
                        
        4=> connect create schema,                  
                        const productSchema = new mongoose.Schema({
                            name: String,
                            price: Number,
                            description: String,
                        })
                        
        5=> connect create modal,
                        const ProductCollection = mongoose.model('Product', productSchema)
                        
        6=> listen app and test connect by nodemon,
                        app.post('/api/products', async(req, res) => {
                            const product = await ProductCollection.create(req.body)
                            res.send({success: true, product})
                        })



==========>>>>><<<<<==========>>>>><<<<<==========>>>>><<<<<==========>>>>><<<<<==========
                6PP : Express JS shpaing index.js file
==========>>>>><<<<<==========>>>>><<<<<==========>>>>><<<<<==========>>>>><<<<<==========

________________________________________
POST operation, follow (6PP_REST_API/shapeExpress/shapeExpress.js)
""""""""""""""""""""""""""""""""""""""""
        1=> all environment setup done  
        2=> app.post API এর async function(PostFunction) টুকুকে কেটে আরেকটা file এ declare করে সেখান থেকে export করে দিতে হবে  
        3=> একটা Router.js file এ   express+PostFunction কে import করে নিয়ে সেখানে router বানাতে হবে express.Router() দিয়ে এবং এই ফাইল থেকে router কে export করে দিতে হবে
        4=> router.route("/path).post(PostFunction) method দিয়ে API connect করতে হবে 
        5=> এবার shapeIndex.js file এ  router কে import করে নিয়ে app.use(router) method apply করতে হবে









